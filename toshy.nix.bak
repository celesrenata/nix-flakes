# Modern Toshy Configuration using the new flake-based NixOS module
{ config, lib, pkgs, ... }:

{
  # Enable Toshy with modern flake-based configuration
  services.toshy = {
    enable = true;
    user = "celes";  # Replace with your username
    
    # GUI configuration
    gui = {
      enable = true;
      tray = true;
      theme = "auto";
      autostart = true;
    };
    
    # Keybinding configuration
    keybindings = {
      macStyle = true;
      
      # Application-specific keybindings
      applications = {
        # Web browsers
        "Firefox" = {
          "Cmd+T" = "Ctrl+T";           # New tab
          "Cmd+W" = "Ctrl+W";           # Close tab
          "Cmd+Shift+T" = "Ctrl+Shift+T"; # Reopen closed tab
          "Cmd+R" = "Ctrl+R";           # Reload
          "Cmd+L" = "Ctrl+L";           # Address bar
          "Cmd+D" = "Ctrl+D";           # Bookmark
        };
        
        "Google Chrome" = {
          "Cmd+T" = "Ctrl+T";
          "Cmd+W" = "Ctrl+W";
          "Cmd+R" = "Ctrl+R";
          "Cmd+L" = "Ctrl+L";
          "Cmd+Shift+I" = "F12";        # Developer tools
        };
        
        # Code editors
        "code" = {
          "Cmd+P" = "Ctrl+Shift+P";     # Command palette
          "Cmd+Shift+P" = "Ctrl+P";     # Quick open
          "Cmd+/" = "Ctrl+/";           # Toggle comment
          "Cmd+D" = "Ctrl+D";           # Select word
          "Cmd+G" = "Ctrl+G";           # Go to line
          "Cmd+B" = "Ctrl+B";           # Toggle sidebar
          "Cmd+J" = "Ctrl+J";           # Toggle panel
        };
        
        # Terminal applications
        "gnome-terminal" = {
          "Cmd+T" = "Ctrl+Shift+T";     # New tab
          "Cmd+W" = "Ctrl+Shift+W";     # Close tab
          "Cmd+N" = "Ctrl+Shift+N";     # New window
          "Cmd+C" = "Ctrl+Shift+C";     # Copy
          "Cmd+V" = "Ctrl+Shift+V";     # Paste
        };
        
        "konsole" = {
          "Cmd+T" = "Ctrl+Shift+T";
          "Cmd+W" = "Ctrl+Shift+W";
          "Cmd+C" = "Ctrl+Shift+C";
          "Cmd+V" = "Ctrl+Shift+V";
        };
        
        # File managers
        "nautilus" = {
          "Cmd+N" = "Ctrl+N";           # New window
          "Cmd+Shift+N" = "Ctrl+Shift+N"; # New folder
          "Cmd+Up" = "Alt+Up";          # Parent directory
          "Cmd+H" = "Ctrl+H";           # Show hidden files
        };
      };
      
      # Global system shortcuts
      globalShortcuts = {
        "Cmd+Space" = "Alt+F2";         # Application launcher
        "Cmd+Tab" = "Alt+Tab";          # Application switcher
        "Cmd+Shift+Tab" = "Alt+Shift+Tab"; # Reverse app switcher
        "Cmd+Q" = "Alt+F4";             # Quit application
        "Cmd+M" = "Alt+F9";             # Minimize window
        "Cmd+H" = "Alt+F6";             # Hide window
      };
    };
    
    # Display system configuration
    wayland = {
      enable = true;
      compositor = "auto";  # Will auto-detect Hyprland
    };
    
    x11 = {
      enable = false;  # Disable X11 since we're using Wayland
      windowManager = "auto";
    };
    
    # Performance configuration
    performance = {
      priority = -5;              # Higher priority for responsiveness
      memoryLimit = "256M";       # Memory limit
      cpuQuota = "50%";          # CPU usage limit
    };
    
    # Security configuration
    security = {
      enableInputGroup = true;    # Add user to input group
      restrictedMode = false;     # Enable full functionality
    };
    
    # Logging configuration
    logging = {
      level = "INFO";
    };
    
    # Custom configuration for advanced users (optional)
    config = ''
      # Custom keybindings for development
      keymap("Development Tools", {
          # Quick terminal shortcuts
          C("shift-t"): C("ctrl-alt-t"),  # Open terminal
      })
      
      # Time-based keymaps (work hours optimization)
      import datetime
      current_hour = datetime.datetime.now().hour
      
      if 9 <= current_hour <= 17:  # Work hours
          keymap("Work Hours", {
              C("shift-m"): C("ctrl-alt-m"),     # Mute microphone
              C("shift-v"): C("ctrl-alt-v"),     # Toggle video
          })
    '';
  };
}
