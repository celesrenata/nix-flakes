--- a/.config/ags/scripts/color_generation/applycolor.sh
+++ b/.config/ags/scripts/color_generation/applycolor.sh
@@ -1,6 +1,6 @@
 #!/usr/bin/env bash
 
-term_alpha=100 #Set this to < 100 make all your terminals transparent
+term_alpha=70 #Set this to < 100 make all your terminals transparent
 # sleep 0 # idk i wanted some delay or colors dont get applied properly
 if [ ! -d "$HOME"/.cache/ags/user/generated ]; then
     mkdir -p "$HOME"/.cache/ags/user/generated
@@ -22,7 +22,7 @@ transparentize() {
   local hex="$1"
   local alpha="$2"
   local red green blue
-
+  
   red=$((16#${hex:1:2}))
   green=$((16#${hex:3:2}))
   blue=$((16#${hex:5:2}))
@@ -30,6 +30,17 @@ transparentize() {
   printf 'rgba(%d, %d, %d, %.2f)\n' "$red" "$green" "$blue" "$alpha"
 }
 
+dehex() {
+  local hex="$1"
+  local red green blue
+
+  red=$((16#${hex:1:2}))
+  green=$((16#${hex:3:2}))
+  blue=$((16#${hex:5:2}))
+
+  printf '%d, %d, %d' "$red" "$green" "$blue"
+}
+
 get_light_dark() {
     lightdark=""
     if [ ! -f "$HOME"/.cache/ags/user/colormode.txt ]; then
@@ -49,6 +60,7 @@ apply_fuzzel() {
     # Copy template
     mkdir -p "$HOME"/.cache/ags/user/generated/fuzzel
     cp "scripts/templates/fuzzel/fuzzel.ini" "$HOME"/.cache/ags/user/generated/fuzzel/fuzzel.ini
+    chmod +w "$HOME"/.cache/ags/user/generated/fuzzel/fuzzel.ini
     # Apply colors
     for i in "${!colorlist[@]}"; do
         sed -i "s/{{ ${colorlist[$i]} }}/${colorvalues[$i]#\#}/g" "$HOME"/.cache/ags/user/generated/fuzzel/fuzzel.ini
@@ -57,6 +69,24 @@ apply_fuzzel() {
     cp  "$HOME"/.cache/ags/user/generated/fuzzel/fuzzel.ini "$HOME"/.config/fuzzel/fuzzel.ini
 }
 
+apply_foot() {
+    if [ ! -f "scripts/templates/foot/foot.ini" ]; then
+        echo "Template file not found for Foot. Skipping that."
+        return
+    fi
+    # Copy template
+    mkdir -p "$HOME"/.cache/ags/user/generated/foot
+    cp "scripts/templates/foot/foot.ini" "$HOME"/.cache/ags/user/generated/foot/foot.ini
+    chmod +w "$HOME"/.cache/ags/user/generated/foot/foot.ini
+    # Apply colors
+    for i in "${!colorlist[@]}"; do
+        # sed -i "s/${colorlist[$i]} #/${colorvalues[$i]#\#}/g" "$HOME"/.cache/ags/user/generated/foot/foot.ini
+        sed -i "s/{{ ${colorlist[$i]} }}/${colorvalues[$i]#\#}/g" "$HOME"/.cache/ags/user/generated/foot/foot.ini
+    done
+
+    cp "$HOME"/.cache/ags/user/generated/foot/foot.ini "$HOME/.config/foot/foot.ini"
+}
+
 apply_term() {
     # Check if terminal escape sequence template exists
     if [ ! -f "scripts/templates/terminal/sequences.txt" ]; then
@@ -66,6 +96,7 @@ apply_term() {
     # Copy template
     mkdir -p "$HOME"/.cache/ags/user/generated/terminal
     cp "scripts/templates/terminal/sequences.txt" "$HOME"/.cache/ags/user/generated/terminal/sequences.txt
+    chmod +w "$HOME"/.cache/ags/user/generated/terminal/sequences.txt
     # Apply colors
     for i in "${!colorlist[@]}"; do
         sed -i "s/${colorlist[$i]} #/${colorvalues[$i]#\#}/g" "$HOME"/.cache/ags/user/generated/terminal/sequences.txt
@@ -89,6 +120,7 @@ apply_hyprland() {
     # Copy template
     mkdir -p "$HOME"/.cache/ags/user/generated/hypr/hyprland
     cp "scripts/templates/hypr/hyprland/colors.conf" "$HOME"/.cache/ags/user/generated/hypr/hyprland/colors.conf
+    chmod +w "$HOME"/.cache/ags/user/generated/hypr/hyprland/colors.conf
     # Apply colors
     for i in "${!colorlist[@]}"; do
         sed -i "s/{{ ${colorlist[$i]} }}/${colorvalues[$i]#\#}/g" "$HOME"/.cache/ags/user/generated/hypr/hyprland/colors.conf
@@ -106,6 +138,7 @@ apply_hyprlock() {
     # Copy template
     mkdir -p "$HOME"/.cache/ags/user/generated/hypr/
     cp "scripts/templates/hypr/hyprlock.conf" "$HOME"/.cache/ags/user/generated/hypr/hyprlock.conf
+    chmod +w "$HOME"/.cache/ags/user/generated/hypr/hyprlock.conf
     # Apply colors
     # sed -i "s/{{ SWWW_WALL }}/${wallpath_png}/g" "$HOME"/.cache/ags/user/generated/hypr/hyprlock.conf
     for i in "${!colorlist[@]}"; do
@@ -121,6 +154,7 @@ apply_gtk() { # Using gradience-cli
     # Copy template
     mkdir -p "$HOME"/.cache/ags/user/generated/gradience
     cp "scripts/templates/gradience/preset.json" "$HOME"/.cache/ags/user/generated/gradience/preset.json
+    chmod +w  "$HOME"/.cache/ags/user/generated/gradience/preset.json
 
     # Apply colors
     for i in "${!colorlist[@]}"; do
@@ -148,6 +182,28 @@ apply_ags() {
     ags run-js "App.resetCss(); App.applyCss('${HOME}/.cache/ags/user/generated/style.css');"
 }
 
+apply_wofi() {
+    # Check if scripts/templates/wofi/style.css exists
+    if [ ! -f "scripts/templates/wofi/style.css" ]; then
+        echo "Template file not found for Wofi colors. Skipping that."
+        return
+    fi
+    # Copy template
+    cp "scripts/templates/wofi/style.css" "$HOME/.config/wofi/style_new.css"
+    chmod +w "$HOME/.config/wofi/style_new.css"
+    # Apply colors
+    for i in "${!colorlist[@]}"; do
+        sed -i "s/{{ ${colorlist[$i]} }}/${colorvalues[$i]#\#}/g" "$HOME/.config/wofi/style_new.css"
+    done
+
+    for i in "${!colorlist[@]}"; do
+        dehexed=$(dehex ${colorvalues[$i]})
+        sed -i "s/{{ ${colorlist[$i]}-rgb }}/${dehexed}/g" "$HOME/.config/wofi/style_new.css"
+    done
+
+    mv "$HOME/.config/wofi/style_new.css" "$HOME/.config/wofi/style.css"
+}
+
 if [[ "$1" = "--bad-apple" ]]; then
     lightdark=$(get_light_dark)
     cp scripts/color_generation/specials/_material_badapple"${lightdark}".scss scss/_material.scss
@@ -170,3 +226,5 @@ apply_hyprlock &
 apply_gtk &
 apply_fuzzel &
 apply_term &
+apply_wofi &
+apply_foot &
